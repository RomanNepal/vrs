import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import {
  Box,
  Button,
  Center,
  Divider,
  Input,
  InputGroup,
  InputLeftAddon,
  Text,
} from "@chakra-ui/react";
import Link from "next/link";
import { MdLocationPin } from "react-icons/md";
import { BsCalendar2DateFill } from "react-icons/bs";
import { FaCar } from "react-icons/fa";
import CarCard from "../components/CarCard";
import { useContext, useEffect, useState } from "react";
import dynamic from "next/dynamic";
const Navbar = dynamic(() => import("../components/Navbar"), { ssr: false });
import Footer from "../components/Footer";
import { AuthContext } from "../components/Context/authContext";
import { useRouter } from "next/router";
import axios from "axios";
import { url } from "../components/Constants";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const {
    userLoggedInInfo,
    setUserLoggedIn,
    driverLoggedInInfo,
    setDriverLoggedInInfo,
  } = useContext(AuthContext);
  const [vehicles, setVehicles] = useState();
  useEffect(() => {
    // if (userLoggedInInfo.isLoggedIn) {
    //   const getUserInfo = async () => {};
    //   getUserInfo();
    // } else {
    //   console.log("not logged in");
    // }
    const getResult = async () => {
      try {
        let response = await axios.get(
          `${url}/vehicle/listall/vehicle`
          // headers: {
          //   Authorization: `Bearer ${
          //     userLoggedInInfo.token
          //       ? userLoggedInInfo.token
          //       : driverLoggedInInfo.driverToken
          //   }`,
          // },
        );
        // console.log(response);
        setVehicles(response.data.data.result);
      } catch (err) {
        console.log(err);
      }
    };
    getResult();
  }, []);
  const router = useRouter();
  const handleClick = () => {
    if (userLoggedInInfo.isLoggedIn) router.push("/dashboard");
    else if (driverLoggedInInfo.isLoggedIn) router.push("/driver/dashboard");
    else {
      router.push("/login");
    }
  };
  return (
    <>
      <Head>
        <title>Vehicle Rental System</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box backgroundColor={"gray.100"}>
        <Navbar activeIndex={0} />

        <Box
          className="hero-section"
          height={"650"}
          display={"flex"}
          pl={"15%"}
          pr={"7%"}
          alignItems={"center"}
        >
          <Box width={"50%"}>
            <Text
              fontFamily={"Inter"}
              fontSize={"7xl"}
              fontWeight={"bold"}
              textColor={"#373737"}
            >
              Saarathi{" "}
            </Text>

            <Text>Own Different Vehicles Everyday</Text>
            <Text>Your Companion To Rent Vehicles</Text>
            <br></br>
            <Button onClick={handleClick} colorScheme="red" width={"50%"}>
              Start By Logging In
            </Button>
            {/* <form>
              <Box
                fontFamily={"Inter"}
                display={"flex"}
                flexDir={"column"}
                gap={"5"}
                width={"70%"}
              >
                <InputGroup>
                  <InputLeftAddon
                    bgColor={"red"}
                    children={<MdLocationPin color="white" />}
                  ></InputLeftAddon>
                  <Input
                    bgColor={"white"}
                    placeholder="Select destination"
                  ></Input>
                </InputGroup>

                <InputGroup>
                  <InputLeftAddon
                    bgColor={"red"}
                    color={"white"}
                    children={<BsCalendar2DateFill></BsCalendar2DateFill>}
                  ></InputLeftAddon>
                  <Input
                    type="date"
                    placeholder="Type date"
                    color={"gray"}
                    bgColor={"white"}
                  ></Input>
                </InputGroup>

                <InputGroup>
                  <InputLeftAddon
                    bgColor={"red"}
                    color={"white"}
                    children={<FaCar />}
                  ></InputLeftAddon>
                  <Input
                    bgColor={"white"}
                    placeholder="Select Vehicle Type"
                  ></Input>
                </InputGroup>

                <Button colorScheme="red">Confirm Selection</Button>
              </Box>
            </form> */}
          </Box>
          <Box width={"50%"} display={"flex"} justifyContent={"center"}>
            <Image src={"/car2.png"} height={"2000"} width={"2000"}></Image>
          </Box>
        </Box>
      </Box>
      <br></br>
      <br></br>
      <Box alignItems={"center"} justifyContent={"center"} marginLeft={"36"}>
        <Text textAlign={"center"} fontWeight={"bold"} fontSize={"3xl"}>
          Explore Newly Added Vehicles
        </Text>
        <br></br>
        {vehicles?.map((item, index) => {
          return (
            <Box>
              <Box
                as={Link}
                key={index}
                href={`/vehicle/${item.id}`}
                paddingRight={"4"}
                display={"flex"}
                alignItems={"center"}
              >
                <Box
                  height={"100px"}
                  width={"150px"}
                  borderRadius={"xl"}
                  position={"relative"}
                  overflow={"hidden"}
                >
                  <Image
                    src={item.thumbnail}
                    // height={"100"}
                    // width={"100"}
                    fill
                    objectFit="cover"
                  ></Image>
                </Box>
                <Box width={"70%"} paddingLeft={"5"} wordBreak={"break-word"}>
                  <Text
                    fontWeight={"bold"}
                    fontSize={"lg"}
                    textColor={"gray.600"}
                  >
                    {item.title}
                  </Text>
                  <Text
                    fontSize={"sm"}
                    fontWeight={"medium"}
                    textColor={"gray.600"}
                  >
                    {/* Brand: {item.brand.title} */}
                  </Text>
                  <Text
                    fontSize={"sm"}
                    fontWeight={"medium"}
                    textColor={"gray.600"}
                  >
                    Model: {item.model}
                  </Text>
                  {/* <Text
                      fontSize={"sm"}
                      fontWeight={"medium"}
                      textColor={"gray.600"}
                    >
                      Engine: {}
                    </Text> */}
                  <Text
                    fontSize={"sm"}
                    fontWeight={"medium"}
                    textColor={"gray.600"}
                  >
                    {/* Category: {item.category.title} */}
                  </Text>
                  {/* <Text
                      fontSize={"sm"}
                      fontWeight={"medium"}
                      textColor={"gray.600"}
                    >
                      Seller: {}
                    </Text> */}
                  <Text
                    fontSize={"medium"}
                    fontWeight={"medium"}
                    textColor={"red.600"}
                  >
                    <b>Rate: {item.rate}</b>
                  </Text>

                  <Button
                    // colorScheme={
                    //   item.status === "available"
                    //     ? "green"
                    //     : item.status === "reserved"
                    //     ? "yellow"
                    //     : item.status === "booked"
                    //     ? "red"
                    //     : ""
                    // }
                    padding={"1"}
                    size={"smaller"}
                    fontSize={"x-small"}
                    colorScheme={item.isBooked ? "red" : "green"}
                  >
                    {item.isBooked ? "Booked" : "Available"}
                  </Button>
                </Box>
              </Box>
              <Divider marginTop={"4"} marginBottom={"4"} />
            </Box>
          );
        })}
      </Box>
      <Text
        fontFamily={"Inter"}
        fontWeight={"bold"}
        fontSize={"4xl"}
        textAlign={"center"}
        mt={"16"}
      >
        Find Vehicles
      </Text>
      <Box
        marginLeft={"8%"}
        marginRight={"8%"}
        marginTop={"16"}
        marginBottom={"16"}
        display={"flex"}
        justifyContent={"space-around"}
        gap={"16"}
        flexWrap={"wrap"}
      >
        {/* for commit only */}
        {/* again for commit */}
        <Link href={"/search"}>
          <CarCard image={"/sedan.webp"} title={"Sedan"} />
        </Link>
        <Link href={"/search"}>
          <CarCard image={"/hatchback.png"} title={"Hatchback"} />
        </Link>
        <Link href={"/search"}>
          <CarCard image={"/brezza.png"} title={"SUV(5-seater))"} />
        </Link>
        <Link href={"/search"}>
          <CarCard image={"/suv2.png"} title={"SUV(7-seater)"} />
        </Link>
        <Link href={"/search"}>
          <CarCard image={"/hiace.png"} title={"7+ Seater"} />
        </Link>
        <Link href={"/search"}>
          <CarCard image={"/tesla.png"} title={"Electric"} />
        </Link>

        <Link href={"/search"}>
          <CarCard image={"/rubicon.png"} title={"Off-road"} />
        </Link>
        <Link href={"/search"}>
          <CarCard title={"+ See All"} />
        </Link>
      </Box>

      <Box padding={"10"}></Box>
      <Footer />
    </>
  );
}
